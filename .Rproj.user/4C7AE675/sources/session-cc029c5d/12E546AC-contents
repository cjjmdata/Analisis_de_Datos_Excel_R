# Primero, necesitarás instalar la biblioteca DiagrammeR si aún no lo has hecho.
# Lista de paquetes que necesitas
packages <- c("DiagrammeR")

# Función para instalar los paquetes que no estén instalados
install_if_missing <- function(packages) {
  for(package in packages) {
    if (!require(package, character.only = TRUE)) {
      install.packages(package, dependencies = TRUE)
    }
  }
}

# Llama a la función para instalar los paquetes necesarios
install_if_missing(packages)



# Puedes hacerlo descomentando y ejecutando la siguiente línea:
install.packages("DiagrammeR")




# Carga la biblioteca
library(DiagrammeR)

# Crea el diagrama
grViz("
  digraph {

    # Define los nodos
    a [label = 'Recolección de requerimientos de datos']
    b [label = 'Recolección de datos']
    c [label = 'Limpieza de datos']
    d [label = 'Análisis de datos']
    e [label = 'Interpretación de datos']
    f [label = 'Visualización de datos']

    # Define las aristas
    a -> b -> c -> d -> e -> f
  }
")


a <- 10
b <- 3
resultado <- (a ^ b) + (a / b) * (a %% b)
resultado

w <- FALSE
x <- 5
y <- 7
z <- TRUE

(x > y) & (y < 10) | z & w




pares <- numeric(10)

# Bucle for
for (i in 1:10) {
  resultado <- (i * 2)^2 - (2 * i)
  print(paste("ciclo ", i, "resultado: ", resultado))
}

# Imprimir los números pares
print(pares)




# Vector de alturas en cm
altura <- c(160, 165, 170, 175, 180, 185, 150, 155, 168, 182)

año <- 2031

if (año %% 4 == 0) {
  if (año %% 100 != 0 || año %% 400 == 0) {
    print("Bisiesto")
  } else {
    print("No bisiesto")
  }
} else {
  print("No bisiesto")
}



if (!require(ggplot2)) {
  install.packages("ggplot2")
}
library(ggplot2)


# Función para visualizar un rango específico en un gráfico de línea
zoom_line <- function(start, end, breaks) {
  # Creamos un dataframe con una sola línea en y = 0
  data <- data.frame(x = seq(from = start, to = end, by = breaks), y = 0)
  
  # Creamos un gráfico de línea
  ggplot(data, aes(x = x, y = y)) + 
    geom_line() +
    scale_x_continuous(name = "Valores", 
                       limits = c(start - breaks/1.2, end + breaks/1.2), 
                       breaks = seq(from = start, to = end, by = breaks)) +
    scale_y_continuous(limits = c(0, 0.5), labels = NULL) + # aquí ajustamos el intervalo del eje Y
    ggtitle("Zoom en línea sobre eje X") +
    theme_minimal() +
    theme(axis.text.x = element_text(vjust = 2.5)) # alineamos horizontalmente las etiquetas del eje X en el centro
}


# Hacemos zoom en el intervalo [1.60, 1.61]

zoom_line(1.60, 1.61, 0.01)
zoom_line(1.60, 1.61, 0.005)
zoom_line(1.60, 1.61, 0.00125)
zoom_line(1.60, 1.61, 0.00100)
zoom_line(1.60, 1.61, 0.00090)
zoom_line(1.60, 1.61, 0.00050)


library(haven)
library(readr)

pisa_18 <- read_sav("00_apoyo/BD/PISA18_CY07_MSU_STU_QQQ_Mx_variables_rm_28_duplicados.sav")

write.csv(pisa_18, file = "datos/pisa_2018_var_select.csv")

datos2 <- read.csv("datos/pisa_2018_var_select.csv")















